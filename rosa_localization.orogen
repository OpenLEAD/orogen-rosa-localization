name "rosa_localization"
# Optionally declare the version number
# version "0.1"

import_types_from 'base'
import_types_from "octomap"
import_types_from "rosa_localizationTypes.hpp"

using_library 'sonaroctomap'

using_library 'rosa_localization'
import_types_from "rosa_localization/RosaPoseParticle.hpp"
import_types_from "rosa_localization/Configuration.hpp"

import_types_from "rosa_localization/DepthState.hpp"

using_library 'odometry'
import_types_from "odometry/Configuration.hpp"

using_library "aggregator"
import_types_from "aggregator"

task_context "Task" do
   
    needs_configuration
    
    #Configuration options for the localization filter
    property('rosa_localization_config', '/rosa_localization/Configuration')

    #Configuration options for the odometry
    property('odometry_config', '/odometry/Configuration')
	
    #path to map
    property('octomap_path', 'string')
    
    #filter parameters
    property('start_pose', '/base/samples/RigidBodyState')
    
    #If the device  does not provide other means to determine sample loss
    #property("sample_loss_threshold", "int", 2)


    ##INPUT PORTS##
    input_port('sonarBeams', 'base/samples/SonarBeam')

    #depth information given by the depth sensor
    input_port('depth', 'odometry/DepthState')

    #orientation of the robot given by the inclinometer
    input_port('roll', 'base/samples/RigidBodyState')
    

   
   ##OUTPUT PORTS ##

    #timestamped particle distribution of the pose.
    output_port('pose_distribution', '/rosa_localization/PoseDistribution')
    
    #timestamped samples of the particle filters pose centroid.
    output_port('pose_samples', '/base/samples/RigidBodyState')
	
	
    output_port('timestamp_estimator_status', '/aggregator/TimestampEstimatorStatus')

    transformer do
	max_latency( 0.2 )

	transformation("sonar", "body")	

	align_port("sonarBeams", 0.5) 
	align_port("depth", 0.2)
	align_port("roll", 0.2)

    end

    port_driven "dynamic_transformations"
end
